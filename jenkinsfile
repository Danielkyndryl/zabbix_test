pipeline {
    agent any

    parameters {
        string(name: 'GIT_SOURCE_REPO', defaultValue: 'https://github.com/example/repo.git', description: 'Git repository URL for source code')
        string(name: 'GIT_BRANCH', defaultValue: 'main', description: 'Branch to monitor')
        string(name: 'PYTHON_SCRIPT', defaultValue: 'main.py', description: 'Python script to execute')
        string(name: 'PYTHON_VERSION', defaultValue: '3.8', description: 'Python version to use')
    }

    environment {
        GIT_CREDENTIALS_ID = 'git-credentials'  // Jenkins credential ID for Git
    }

    stages {
        stage('Checkout Source Code') {
            steps {
                echo "Checking out source code from ${params.GIT_SOURCE_REPO} (Branch: ${params.GIT_BRANCH})"
                git branch: "${params.GIT_BRANCH}", credentialsId: "${env.GIT_CREDENTIALS_ID}", url: "${params.GIT_SOURCE_REPO}"
            }
        }

        stage('Detect Changes') {
            steps {
                script {
                    echo "Checking for changes in the repository..."
                    def changes = sh(script: 'git diff --name-only HEAD~1 HEAD', returnStdout: true).trim()
                    
                    if (changes) {
                        echo "Changes detected: ${changes}"
                    } else {
                        echo "No changes detected. Skipping execution."
                        currentBuild.result = 'ABORTED'
                        return
                    }
                }
            }
        }

        stage('Setup Python Environment') {
            steps {
                script {
                    echo "Setting up Python ${params.PYTHON_VERSION} environment..."
                    sh """
                        python3 -m venv venv
                        source venv/bin/activate
                        pip install -r requirements.txt
                    """
                }
            }
        }

        stage('Execute Python Script') {
            steps {
                script {
                    echo "Running ${params.PYTHON_SCRIPT}..."
                    sh """
                        source venv/bin/activate
                        python ${params.PYTHON_SCRIPT}
                    """
                }
            }
        }
    }

    post {
        success {
            echo "✅ Python script executed successfully!"
        }
        failure {
            echo "❌ Python script execution failed!"
        }
    }
}
